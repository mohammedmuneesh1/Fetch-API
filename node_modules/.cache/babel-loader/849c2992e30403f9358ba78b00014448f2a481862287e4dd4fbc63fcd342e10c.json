{"ast":null,"code":"var _jsxFileName = \"D:\\\\CODE\\\\TASK\\\\fetchapi\\\\src\\\\FetchApi.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function FetchApi() {\n  _s();\n  useEffect(() => {\n    fetch(\"https://dummyjson.com/quotes\").then(response => {\n      if (!response.ok) {\n        throw new Error(\"network response not ok \");\n      }\n      return response.json();\n    }).then(data => console.log(data.quotes)).catch(error => {\n      console.log(\"erro happened\", error);\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: data.quotes.quote.forEach((value, inde) => {\n      /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false);\n}\n_s(FetchApi, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = FetchApi;\nvar _c;\n$RefreshReg$(_c, \"FetchApi\");","map":{"version":3,"names":["React","useCallback","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","FetchApi","_s","fetch","then","response","ok","Error","json","data","console","log","quotes","catch","error","children","quote","forEach","value","inde","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/CODE/TASK/fetchapi/src/FetchApi.js"],"sourcesContent":["import React, { useCallback, useEffect } from 'react'\r\n\r\nexport default function FetchApi() {\r\n    useEffect(()=>{\r\n        fetch(\"https://dummyjson.com/quotes\")\r\n        .then(response=>{ \r\n            if(!response.ok){ throw new Error(\"network response not ok \")}\r\n            return response.json();})\r\n        .then(data=>console.log(data.quotes))\r\n        .catch(error=>{console.log(\"erro happened\",error)});\r\n    })\r\n  return (\r\n    <>\r\n    { data.quotes.quote.forEach((value,inde) => {\r\n        <h1>{value}</h1>})\r\n        \r\n    }\r\n    </>\r\n  )\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,WAAW,EAAEC,SAAS,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAErD,eAAe,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAC/BN,SAAS,CAAC,MAAI;IACVO,KAAK,CAAC,8BAA8B,CAAC,CACpCC,IAAI,CAACC,QAAQ,IAAE;MACZ,IAAG,CAACA,QAAQ,CAACC,EAAE,EAAC;QAAE,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;MAAA;MAC7D,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAAC,CAAC,CAAC,CAC5BJ,IAAI,CAACK,IAAI,IAAEC,OAAO,CAACC,GAAG,CAACF,IAAI,CAACG,MAAM,CAAC,CAAC,CACpCC,KAAK,CAACC,KAAK,IAAE;MAACJ,OAAO,CAACC,GAAG,CAAC,eAAe,EAACG,KAAK,CAAC;IAAA,CAAC,CAAC;EACvD,CAAC,CAAC;EACJ,oBACEhB,OAAA,CAAAE,SAAA;IAAAe,QAAA,EACEN,IAAI,CAACG,MAAM,CAACI,KAAK,CAACC,OAAO,CAAC,CAACC,KAAK,EAACC,IAAI,KAAK;MACxC,aAAArB,OAAA;QAAAiB,QAAA,EAAKG;MAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA,CAAC;EAAC,gBAGpB,CAAC;AAEP;AAACrB,EAAA,CAjBuBD,QAAQ;AAAAuB,EAAA,GAARvB,QAAQ;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}